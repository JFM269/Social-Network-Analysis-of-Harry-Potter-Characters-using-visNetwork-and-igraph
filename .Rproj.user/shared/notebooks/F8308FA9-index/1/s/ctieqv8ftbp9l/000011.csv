"0",""
"0","g <- graph_from_data_frame(d = edges_transformed, vertices = nodes_transformed, directed = FALSE)"
"0",""
"0","# Apply Louvain clustering on the graph using edge weights"
"0","clusters <- cluster_louvain(g, weights = E(g)$weight)"
"0",""
"0","# Assign cluster membership to nodes and create color mapping for communities"
"0","nodes_transformed$community <- as.factor(membership(clusters))"
"0",""
"0","num_communities <- length(unique(nodes_transformed$community))"
"0","community_colors <- RColorBrewer::brewer.pal(min(num_communities, 12), ""Set3"")"
"0",""
"0","# Visualize the network"
"0","network <- visNetwork(nodes_transformed, edges_transformed, width = ""100%"", main = ""Harry Potter Characters Network by Community"") |>"
"0","  visLayout(randomSeed = 123) |>"
"0","  visNodes(color = list(border = ""black"", background = nodes_transformed$color.community), size = 20) |>"
"0","  visEdges(width = 1) |>"
"0","  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = FALSE), selectedBy = ""community"") |>"
"0","  visPhysics(enabled = TRUE, solver = ""forceAtlas2Based"", "
"0","             forceAtlas2Based = list(gravitationalConstant = -5, centralGravity = 0.01, springLength = 150, avoidOverlap = 1)) |>"
"0","  visInteraction(dragNodes = TRUE, zoomView = TRUE, dragView = TRUE) |>"
"0","  visEdges(smooth = FALSE)"
"2","Warning:"
"2"," Unknown or uninitialised column: `color.community`.
"
"0","network"
